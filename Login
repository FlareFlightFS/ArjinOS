import PySimpleGUI as sg
import hashlib
import subprocess
import os
import time


def hash_pin(pin):
    return hashlib.sha256(pin.encode()).hexdigest()


def verify_pin(entered_pin, stored_hash):
    return hash_pin(entered_pin) == stored_hash

def reset_pin():
    layout_reset = [
        [sg.Text('Enter a new PIN:', font=('Arial', 24), text_color='white')],
        [sg.InputText(key='-NEWPIN-', password_char='*', font=('Arial', 24), size=(30, 1))],
        [sg.Button('Submit', font=('Arial', 24))]
    ]
    window_reset = sg.Window('Reset PIN', layout_reset, finalize=True, size=(1080, 1920), background_color='black')

    while True:
        event, values = window_reset.read()
        if event == sg.WINDOW_CLOSED:
            break
        if event == 'Submit':
            new_pin = values['-NEWPIN-']
            if new_pin:
                hashed_pin = hash_pin(new_pin)
                with open(pin_file, 'w') as f:
                    f.write(hashed_pin)
                sg.popup('PIN reset successfully!', font=('Arial', 24))
                break
    window_reset.close()


required_files = ['Login.py', 'dev.py', 'homescreen.py']
missing_files = [filename for filename in required_files if not os.path.exists(filename)]


if missing_files:
    for filename in missing_files:
        url = f"https://raw.githubusercontent.com/hiddenavia/ArjinOS/master/{filename}"
        subprocess.run(['curl', '-o', filename, url])


pin_file = 'pin_hash.txt'
status_file = 'status.txt'


if os.path.exists(status_file):
    with open(status_file, 'r') as f:
        status = f.read().strip()
else:
    status = '0'


if status == '0':
    layout_boot_log = [
        [sg.Text('ArjinOS Boot Log', font=('Arial', 24), text_color='white')]
    ]
    window_boot_log = sg.Window('Boot Log Simulation', layout_boot_log, finalize=True, size=(1080, 1920), background_color='black')

    start_time = time.time()
    boot_log_text = ""
    try:
        while time.time() - start_time < 5:
            boot_log_text += "Loading..." + '\n'
            window_boot_log['-TEXT-'].update(boot_log_text)
            window_boot_log.refresh()
            time.sleep(1)
    except KeyboardInterrupt:
        pass

    window_boot_log.close()


    layout_setup = [
        [sg.Text('Set up your PIN:', font=('Arial', 24), text_color='white')],
        [sg.InputText(key='-PIN-', password_char='*', font=('Arial', 24), size=(30, 1))],
        [sg.Button('Submit', font=('Arial', 24))]
    ]
    window_setup = sg.Window('Setup PIN', layout_setup, finalize=True, size=(1080, 1920), background_color='black')

    while True:
        event, values = window_setup.read()
        if event == sg.WINDOW_CLOSED:
            break
        if event == 'Submit':
            pin = values['-PIN-']
            if pin:
                hashed_pin = hash_pin(pin)
                with open(pin_file, 'w') as f:
                    f.write(hashed_pin)
                with open(status_file, 'w') as f:
                    f.write('1')
                sg.popup('PIN saved successfully!', font=('Arial', 24))
                break
    window_setup.close()

# Login
layout_login = [
    [sg.Text('Enter your PIN:', font=('Arial', 24), text_color='white')],
    [sg.InputText(key='-PIN-', password_char='*', font=('Arial', 24), size=(30, 1))],
    [sg.Button('Submit', font=('Arial', 24))]
]
window_login = sg.Window('Login', layout_login, finalize=True, size=(1080, 1920), background_color='black')

while True:
    event, values = window_login.read()
    if event == sg.WINDOW_CLOSED:
        break
    if event == 'Submit':
        pin = values['-PIN-']
        if pin:
            if pin == "*#4559LOCK#":
                reset_pin()
                continue
            if pin == "#ARJINOSDEVELOPERMODE596868#":
                subprocess.run(['python3', 'dev'])
                continue
            with open(pin_file, 'r') as f:
                stored_hash = f.read().strip()
            if verify_pin(pin, stored_hash):
                sg.popup('PIN verified successfully! Welcome to ArjinOS.', font=('Arial', 24))
                subprocess.run(['python3', 'homescreen'])
                break
            else:
                sg.popup('Incorrect PIN. Please try again.', font=('Arial', 24))

window_login.close()